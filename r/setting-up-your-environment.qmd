---
title: Setting Up Your R Environment
pre-render:
  - pre_render_script.R
---

We aim to lower the bar for starting empirical research in financial economics. We want that using R is easy for you. However, given that Tidy Finance is a platform that supports multiple programming languages, we also consider the possibility that you are not familiar with R at all. Hence, we provide you with a simple guide to get started with R and RStudio. If you were not using R before, you will be able to use it after reading this chapter.

## The R language

Some good news first: The software you need is free and easy to download. We will start with downloading and installing R and follow up with doing the same for RStudio.

R is provided via [The Comprehensive R Archive Network](https://cran.r-project.org/) (or short CRAN). CRAN does not only provide the main software but also nearly all extensions that you need. We will cover these extensions or packages later, as we usually visit the CRAN website only to download the base version. Now, go ahead and visit CRAN. On the landing page, you can choose your operating systems (i.e., Linux, macOS, and Windows). Click the respective link that fits your system:\index{CRAN}

- R comes as a part of many Linux distributions. If it does not, CRAN provides installation guides for individual Linux distributions.
- For macOS, the choice currently depends on some hardware specifications, but the right version for your system is clearly indicated.
- For Windows, you want to use the base version provided.

After downloading and installing the software to your system, you are nearly ready to go. In fact, you could just use R now. Unfortunately for many users, R is not a program but a programming language and comes with an interpreter that you would use like a command line. While using R like this might make you feel like a hacker (not that we do not endorse any criminal activity), it is in your best interest to combine R with RStudio.

R is constantly being updated, with new versions being released multiple times a year. This means that you might want to return to CRAN in the future to fetch yourself an update. You know it is time for an update if packages remind you that you are using an outdated version of R. 

## RStudio

Assuming you are looking for a more comfortable way of using R, you will get RStudio next. You can download it for free from [Posit](https://posit.co/download/rstudio-desktop/) (i.e., the company that created RStudio, which was previously called RStudio itself). When you follow the instructions, you will see that Posit asks you to install R. However, you should have done that already and can move straight to downloading and installing RStudio.\index{RStudio}

RStudio is a program similar to other programs you most likely use, like a browser, text editor, or anything else. It comes with many advantages, including a project manager, Github integration, and much more. Unfortunately, Tidy Finance is not the right scope to elaborate more on these possibilities or introduce the basics of programming, but we point you to some excellent resources below. For the purposes of this book, you have completed your excursions to websites that provide you with the necessary software installers.

## R Packages and Environments

Following your read of the preface to this book, you might now wonder why we did not download the `tidyverse` yet. Therefore, you must understand one more concept, namely packages in R.\index{Packages} You can think of them as extensions that you use for specific purposes, whereas R itself is the core pillar upon which everything rests. Comfortably, you can install packages within R with the following code. 

```{r, eval = FALSE}
install.packages("tidyverse")
```

Simply specify the package you want where we placed `tidyverse`. You typically only need to install packages once - except for updates or project-specific R environments. Once installed, you can then load a package with a call to `library("tidyverse")` to use it.

To keep track of the packages' versions and make our results replicatable, we rely on the package `renv`. It creates a project-specific installation of R packages and you can find the full list of packages used here in the colophon below. The recorded package versions can also be shared with collaborators to ensure consistency. Our use of `renv` also makes it easier for you to install the exact package versions we were using (if you want that) by initializing `renv` with our [renv.lock](https://github.com/tidy-finance/website/blob/main/renv.lock)-file from Github.\index{Packages:renv} \index{Github}

One more piece of advice is the use of RStudio projects. They are a powerful tool to save you some time and make working with R more fun. Without going into more detail here, we refer you to @Wickham2023's chapter on [Workflow: scripts and projects](https://r4ds.hadley.nz/workflow-scripts.html).\index{RStudio!Projects}

## Your First Steps with R

While we believe that downloading and installing R and RStudio is sufficiently easy, you might find help from @Grolemund2014 on [R and RStudio](https://rstudio-education.github.io/hopr/starting.html), [packages](https://rstudio-education.github.io/hopr/packages2.html), as well as [updating](https://rstudio-education.github.io/hopr/updating.html) the software.

This book's scope cannot be to give you an introduction to R itself. It is not our comparative advantage. However, we can point you to a possible path that you could follow to familiarize yourself with R. Therefore, we make the following suggestion:

-   If you are new to R itself, a very gentle and good introduction to the workings of R can be found in @Grolemund2014. He provides a wonderful example in the form of the [weighted dice project](https://rstudio-education.github.io/hopr/project-1-weighted-dice.html). Once you are done setting up R on your machine, try to follow the instructions in this project.
-   The main book on the `tidyverse`, @Wickham2023, is available online and for free: [R for Data Science](https://r4ds.had.co.nz/introduction.html) explains the majority of the tools we use in our book. Working through this text is an eye-opening experience and really useful.\index{tidyverse}

Additional resources we can encourage you to use are the following:

-   If you are an instructor searching to effectively teach R and data science methods, we recommend taking a look at the excellent [data science toolbox](https://datasciencebox.org/) by [Mine Cetinkaya-Rundel.](https://mine-cr.com/about/)
-   RStudio provides a range of excellent [cheat sheets](https://www.rstudio.com/resources/cheatsheets/) with extensive information on how to use the `tidyverse` packages.\index{tidyverse} \index{RStudio:Cheat sheets}

## Colophon

This book was written in RStudio using `bookdown` [@Xie2016]. The website was rendered using `quarto` [@quarto] and it is hosted via GitHub Pages.
The complete source is [available from GitHub](https://github.com/tidy-finance/website).\index{Bookdown} \index{Github} \index{Quarto} We generated all plots in this book using `ggplot2` and its classic dark-on-light theme (`theme_bw()`).\index{ggplot2 theme}

This version of the book was built with R [@R-base] version `r paste0(version$major,".", version$minor, " (",version$year, "-", version$month, "-", version$day,", ", version$nickname,")")` and the following packages: \index{Colophon}

```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(ggplot2) # Packages are not needed but loaded to show up in the colophon
library(dplyr)
library(tidyr)
library(readr)
library(purrr)
library(tibble)
library(stringr)
library(forcats)
dependencies <- renv::dependencies(progress = FALSE) |> count(Package)
packages <- jsonlite::fromJSON("../renv.lock", flatten = TRUE)
do.call("rbind", packages$Packages) |>
  as_tibble() |>
  select(Package, Version) |>
  unnest(cols = c("Package", "Version")) |>
  inner_join(dependencies, by = "Package") |>
  arrange(Package) |>
  select(-n) |>
  kableExtra::kbl(booktabs = TRUE) |> 
  kableExtra::kable_styling(full_width = TRUE)
```
