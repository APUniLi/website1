{
  "hash": "5f9693aaf337675ccd8c620ecdc39693",
  "result": {
    "markdown": "---\ntitle: \"Comparing Fama-French Three vs Five Factors\"\nauthor:\n  - name: Christoph Scheuch\n    url: https://christophscheuch.github.io/\n    affiliations:\n      - name: wikifolio Financial Technologies AG\ndate: \"2023-09-20\"\ndescription: An explanation for the difference in the value factors of FF3 and FF5 data\nimage: thumbnail.png\nimage-alt: Two stylized high rise office buildings, one small building and one large building, both buildings visible in the frame. The background has a futuristic setting, with a backdrop of a digital, grid-like landscape symbolizing the internet. The color palette should be a combination of cool blues and warm yellow. Created with DALL-E 2.\ncategories: \n  - Data\n  - Replication\n--- \n\n\nIn our book chapter [Replicating Fama and French Factors](../../r/replicating-fama-and-french-factors), we show how to construct factor portfolios that are fairly close to the popular data from [Prof. Kenneth French finance data library](https://mba.tuck.dartmouth.edu/pages/faculty/ken.french/data_library.html). In this blog post, I want to elaborate a bit more on the subtle differences between the size and value data in the Fama-French three (FF3) and five (FF5) factor data. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(RSQLite)\n\ntidy_finance <- dbConnect(\n  SQLite(), \n  \"../../data/tidy_finance.sqlite\", \n  extended_types = TRUE\n)\n\nfactors_ff3_monthly <- tbl(tidy_finance, \"factors_ff3_monthly\") |> \n  collect()\n\nfactors_ff5_monthly <- tbl(tidy_finance, \"factors_ff5_monthly\") |> \n  collect()\n\nfactors_ff <- factors_ff3_monthly |> \n  rename_with(.cols = c(mkt_excess, rf, smb, hml),\n              ~str_c(.x, \"_ff3\")) |> \n  inner_join(\n    factors_ff5_monthly |> \n      select(month, mkt_excess, rf, smb, hml) |> \n      rename_with(.cols = c(mkt_excess, rf, smb, hml),\n              ~str_c(.x, \"_ff5\")), by = \"month\")\n```\n:::\n\n\nLet us first inspect the summary statistics of each factor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfactors_ff |> \n  pivot_longer(cols = - month) |> \n  select(name, value) |>\n  drop_na() |>\n  group_by(name) |>\n  summarize(\n    mean = mean(value),\n    sd = sd(value),\n    min = min(value),\n    q05 = quantile(value, 0.05),\n    q50 = quantile(value, 0.50),\n    q95 = quantile(value, 0.95),\n    max = max(value),\n    n = n()\n  ) |> \n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 9\n  name        mean      sd    min     q05     q50    q95    max     n\n  <chr>      <dbl>   <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl> <int>\n1 hml_ff3  0.00274 0.0290  -0.139 -0.0410 0.00225 0.0528 0.125    702\n2 hml_ff5  0.00274 0.0290  -0.139 -0.0410 0.00225 0.0528 0.125    702\n3 mkt_exc… 0.00589 0.0445  -0.232 -0.0718 0.0097  0.0704 0.161    702\n4 mkt_exc… 0.00589 0.0445  -0.232 -0.0718 0.0097  0.0704 0.161    702\n5 rf_ff3   0.00366 0.00268  0      0      0.0038  0.0081 0.0135   702\n6 rf_ff5   0.00366 0.00268  0      0      0.0038  0.0081 0.0135   702\n7 smb_ff3  0.00198 0.0305  -0.172 -0.0419 0.0012  0.0505 0.214    702\n8 smb_ff5  0.00228 0.0303  -0.153 -0.0431 0.001   0.0494 0.183    702\n```\n:::\n:::\n\n\nThe above table shows that `rf`, `mkt_excess`, and `hml` show de facto identical value across all statistics for FF3 and FF5. However, the `smb` vales seem to be different between the both data sets. Another way to show the difference is running regressions, as we do in [Replicating Fama and French Factors](../../r/replicating-fama-and-french-factors):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_smb <- lm(smb_ff3 ~ smb_ff5, data = factors_ff)\nsummary(model_smb)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = smb_ff3 ~ smb_ff5, data = factors_ff)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.03546 -0.00192  0.00028  0.00201  0.03369 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.000269   0.000218   -1.23     0.22    \nsmb_ff5      0.986977   0.007180  137.46   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.00576 on 700 degrees of freedom\nMultiple R-squared:  0.964,\tAdjusted R-squared:  0.964 \nF-statistic: 1.89e+04 on 1 and 700 DF,  p-value: <2e-16\n```\n:::\n:::\n\n\nRegressing the FF3 SMB factor on its FF5 counterpart yields a coefficient of 0.99 and an R-squared around 96%, so definitely no perfect co-movement. Where does this difference come from?\n\nThere are actually two explanations for the differences:\n\n1. The value portfolios `portfolio_bm` are constructed as independent sorts in FF3, while they are the result of dependent sorts in FF5 (depending on `portfolio_size`).\n1. The FF3 and FF5 data are based on slightly different samples: while the FF3 data considers all stocks with valid `bm` values, the FF5 data requires valid `bm`, `op`, and `inv` values. So if firms don't report any of the values that enter into these three sorting variables, then they are dropped from the portfolio sorts. \n\nWhat are the implications for empirical applications? You should be careful when you want to test your portfolios against FF3 and FF5 factors. It is strictly speaking not correct to just use a subsample of factors from FF5 if you want to test against the FF3 factors. I rather recommend downloading both FF3 and FF5 and run tests with each data set separately. \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}