---
title: Setting Up Your Environment
metadata:
  pagetitle: Setting Up Your Python Environment
  description-meta: How to set up your development environment to program with Python.  
---

```{python}
#| echo: false
import pre_render_script
```

We aim to lower the bar for starting empirical research in financial economics. We want that using Python is easy for you. However, given that Tidy Finance is a platform that supports multiple programming languages, we also consider the possibility that you are not familiar with Python at all. Maybe you transition from R to Python, i.e., follow the journey of Tidy Finance, which started in R. Hence, we provide you with a simple guide to get started with Python. If you were not using Python before, you will be able to use it after reading this chapter.

## Python Environment

A Python environment is a self-contained directory or folder containing a specific version of the Python interpreter and a set of packages and dependencies. In order to isolate and manage the specific dependencies of the Tidy Finance with Python project, a virtual environment is a reliable way to ensure that it will work consistently and reliably on different systems and over time.

There are many ways to install a Python interpreter and environments on your system. We present two ways that we found most convenient to write the book and maintain the website: installation via Anaconda and using Python in Spyder and installation via RStudio. 

## Installation via Anaconda

First, we need to install Python itself via Anaconda. You can download the latest version of Anaconda from the official [Anaconda website](https://www.anaconda.com/products/individual). After you downloaded the respective version for you operating system, follow the installation instructions.

Second, we now describe how to set up a Python virtual environment specific for Tidy Finance on your local system. We decided to use Python version 3.10.11, after many trial and errors to set-up the environment that we used to write this book using both Windows and Mac. We thus recommend you to also install that version.  Therefore, we use the Anaconda Python distribution you downloaded in the step before. Additionally, you need our [requirements.txt](https://github.com/tidy-finance/website/blob/main/requirements.txt)-file in a dedicated folder for the project. We recommend you start with the package installation right away. After you prepared your system you can open the Anaconda prompt and install your virtual environment with the following commands:

1. `conda create -p C:\Apps\Anaconda3\envs\tidy_finance_environment python==3.10.11  (Confirm with y)`
2. `conda activate C:\Apps\Anaconda3\envs\tidy_finance_environment`
3. `pip install -r "<Tidy-Finance-with-Python Folder>\requirements.txt"`

All other packages found with the command pip list are installed automatically as dependencies with the required packages in the requirements.txt file.

Now, you are basically ready to go. However, you will now need a Python interpreter to make your coding experience pleasant.

## Python Interpreter

If you are new to coding, you will not have a Python interpreter. We recommend using Spyder, if you plan to only coding in Python. You can download the software for your operating system from the [official website](https://www.spyder-ide.org/). Then, follow the installation instructions. To add the perviously created virtual environment to Spyder, Go to Tools → Preferences → Python Interpreter → "Use the following interpreter" and add `C:\Apps\Anaconda3\envs\tidy_finance_environment\python.exe`.

If you already work with R, you probably have a powerful Python interpreter already: RStudio.You can get your RStudio version from [Posit](https://posit.co/download/rstudio-desktop/) (i.e., the company that created RStudio, which was previously called RStudio itself). When you follow the instructions, you will see that Posit asks you to install R - you need to do so to make RStudio feasible for Python. Then, select the virtual environment in RStudio.

## Installation via RStudio

You can also install Python and set up your environment directly from RStudio. This approach has the big advantage that you can switch between R and Python scripts smoothly. 

1. Open RStudio and install the R package `reticulate`: `install.packages("reticulate")`
2. Install Python via `reticulate`: `reticulate::install_python(version="3.10.11", force = TRUE)`
3. Install the R package `renv` to manage environments: `install.packages("renv")`
4. Tell `renv` to use Python: `renv::use_python("PATH")`
  a. `"PATH"` on Mac: `"~/.pyenv/versions/3.10.11/bin/python"`
  b. `"PATH"` on Windows: `"C:/Users/<User>/AppData/Local/r-reticulate/r-reticulate/pyenv/pyenv-win/versions/3.10.11/python.exe"` where `<User>` is your user name
5. Download [requirements.txt](https://github.com/tidy-finance/website/blob/main/requirements.txt) to your project folder
6. Tell `renv` to install all required packages: `renv::restore()`


## Colophon


