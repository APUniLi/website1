---
title: "tidyfinance 0.4.0: new data downloads"
author:
  - name: Christoph Scheuch
    url: https://www.linkedin.com/in/christophscheuch/
    affiliations:
      - name: Independent
  - name: Stefan Voigt
    url: https://www.voigtstefan.me/
    affiliations:
      - name: University of Copenhagen
      - name: Danish Finance Institute
  - name: Patrick Weiss
    url: https://sites.google.com/view/patrick-weiss
    affiliations:
      - name: Reykjavik University
      - name: WU Vienna University of Economics and Business
date: "2024-08-30"
description: tidyfinance 0.4.0 is now on CRAN. Discover the new data download options it includes. 
image: thumbnail.png
image-alt: Abstract illustration of a data flow pipeline with arrows and lines moving from financial icons like stock charts, currency symbols, and graphs towards a central tidy data frame. The background features a gradient of deep blues and greens, symbolizing finance and technology. The text ‘tidyfinance 0.4.0’ and a small CRAN logo are prominently displayed, with additional subtle financial icons integrated into the design. Created with DALL-E.
categories: 
  - Data
  - R
--- 

We are happy to annouce the release of version 0.4.0 of the `tidyfinance` R package [on CRAN](https://CRAN.R-project.org/package=tidyfinance). The package contains a set of helper functions for empirical research in financial economics, addressing a variety of topics covered in [Tidy Finance with R](../../r/index.qmd) (TFWR). We designed the package to provide easy shortcuts for the applications that we discuss in the book. If you want to inspect the details of the package or propose new features, feel free to visit the package repository on [Github](https://github.com/tidy-finance/r-tidyfinance).

As the new release brings many new features, we split them up into two blog posts. In this blog post, we discuss the new data downloads that `tidyfinance` now supports. 

## Install the package

You can install the released version of `tidyfinance` from CRAN via:

```{r}
#| eval: false
install.packages("tidyfinance")
```

You can install the development version of tidyfinance from GitHub using the `pak` package:

```{r}
#| eval: false
pak::pak("tidy-finance/r-tidyfinance")
```

You then load the package via:

```{r}
library(tidyfinance)
```

## Download stock data

You can download stock prices from [Yahoo Finance](https://finance.yahoo.com/) using the type `stock_prices` and provide symbols:

```{r}
download_data("stock_prices", symbols = c("AAPL", "MSFT"))
```

As you can see, we included defaults for `start_date` and `end_date` that you can of course overwrite:

```{r}
download_data("stock_prices", symbols = c("AAPL", "MSFT"),
              start_date = "2020-01-01", end_date = "2020-12-31")
```

To inspect details about the download approach, you can call the documentation via `?download_data_stock_prices`.

To get symbols, you have now two options: first, you can download symbols from the [Nasdaq Stock Screener](https://www.nasdaq.com/market-activity/stocks/screener) for the exchanges AMEX, NASDAQ, and NYSE. Analogously, you can find details using `?download_data_symbols`.

```{r}
download_data("symbols", exchange = "NASDAQ")
```

Second, you can  download index constituents from selected [iShares ETFs](https://www.ishares.com/us/products/etf-investments#/?productView=etf&pageNumber=1&sortColumn=totalNetAssets&sortDirection=desc&dataView=keyFacts) that physically replicate the corresponding index:

```{r}
download_data("constituents", index = "DAX")
```

The documentation `?download_data_constituents` provides details. 

## Download macro data

We also added support for the [Federal Reserve Economic Databa (FRED)](https://fred.stlouisfed.org/), where you can easily download multiple series (see `?download_data_fred` for details):

```{r}
download_data("fred", series = c("GDP", "CPIAUCNS"))
```

Our approach is a simple wrapper around the FRED download data site. If you want to systematically download FRED data via API, please consider using `fredr` package.

The [macro predictors](https://www.tidy-finance.org/r/accessing-and-managing-financial-data.html#macroeconomic-predictors) by Ivo Welch and Amig Goyal now also come in different flavors: monthly, quarterly, and annual. For instance, the annual data can be fetched via:

```{r}
download_data("macro_predictors_annual")
```

See `?download_data_macro_predictors` for details. 

Finally, we also added support to download the factors from [Open Source Asset Pricing (OSAP)](https://www.openassetpricing.com/) by Andrew Y. Chen and Tom Zimmermann:

```{r}
download_data("osap")
```

You can get more information by calling `?download_data_osap`.

## List supported types and indexes

To get a list of supported data types, you can call:

```{r}
list_supported_types()
```

The list of supported indexes for `download_data_constituents()` can be inspected via:

```{r}
list_supported_indexes()
```

## Concluding remarks

We are curious to learn in which direction we should extend the package, so please consider opening an issue in the [package repository](https://github.com/tidy-finance/r-tidyfinance/issues). For instance, we could support more data sources, add more parameters to the `download_*` family of functions, or we could put more emphasis on the generality of portfolio assignment or other modeling functions. Moreover, if you discover a bug, we are very grateful if you raise them in the repository.
